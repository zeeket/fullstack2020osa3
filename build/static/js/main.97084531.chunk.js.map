{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","props","value","nameFilter","onChange","handleNameFilterChange","PersonForm","onSubmit","addName","newName","handleNameChange","newNumber","handleNumberChange","type","Persons","personsToShow","map","person","name","number","onClick","handleDeletePerson","id","baseUrl","personService","getAll","axios","get","then","response","data","create","newObject","post","update","put","deletePerson","url","delete","console","log","Notification","message","className","App","useState","persons","setPersons","setNewName","setNewNumber","setNameFilter","notifMessage","setNotifMessage","useEffect","initialPersons","filter","toLowerCase","startsWith","event","target","preventDefault","nameObject","sameName","find","p","returnedPerson","setTimeout","alert","concat","catch","error","tbd","window","confirm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.97084531.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = (props) => {\n\n  return (\n    <div>\n    filter shown with \n    <input value={props.nameFilter} onChange={props.handleNameFilterChange}/>\n    </div>\n  )\n}\n\nexport default Filter\n","import React from 'react'\n\nconst PersonForm = (props) => {\n  return (\n      <form onSubmit={props.addName}>\n        <div>\n          name: <input \n            value={props.newName}\n            onChange={props.handleNameChange}\n          />\n        </div>\n        <div>\n          number: <input \n            value={props.newNumber}\n            onChange={props.handleNumberChange}\n          />\n        </div>\n        <div>\n          <button type=\"submit\" >add</button>\n        </div>\n      </form>\n  )\n}\nexport default PersonForm\n","import React from 'react'\n\nconst Persons = (props) => {\n  return (\n      <h2>Numbers</h2>,\n      (props.personsToShow).map(person =>\n        <p key={person.name}> {person.name} {person.number}<button onClick={()=>props.handleDeletePerson(person.id)}>delete</button> </p>) \n  )\n}\nexport default Persons\n","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst deletePerson = id => {\n  const url = `${baseUrl}/${id}`\n\n  axios.delete(url).then(response => {\nconsole.log(response);\n  })\n}\nconst personService = { getAll,create,update,deletePerson }\nexport default personService\n","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"notification\">\n      {message}\n    </div>\n  )\n}\nexport default Notification\n","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [nameFilter, setNameFilter] = useState('')\n  const [notifMessage, setNotifMessage] = useState(null)\n\n  const hook = () => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }\n\n  useEffect(hook, [])\n\n  const addName = (event) => {\n    event.preventDefault()\n    const nameObject = {\n      name: newName,\n      number: newNumber\n    }\n    const sameName = persons.find(p => p.name === newName)\n\n    if(!sameName) {\n      personService\n        .create(nameObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n          setNotifMessage(\n            `${returnedPerson.name} was added!`\n          )\n          setTimeout(() => {\n            setNotifMessage(null)\n          }, 5000)\n        })\n        .catch(error => {\n          setNotifMessage(error.response.data.error)\n        })\n\n    } else if(sameName.number !== newNumber){\n      personService\n        .update(sameName.id,{...sameName, number:newNumber})\n        .then(returnedPerson => {\n          setPersons(persons.map(p => p.id === returnedPerson.id ? returnedPerson : p ))\n          setNewName('')\n          setNewNumber('')\n          setNotifMessage(\n            `${returnedPerson.name}'s number was changed`\n          )\n          setTimeout(() => {\n            setNotifMessage(null)\n          }, 5000)\n        })\n    } else {\n\n      alert(`${newName} is already added to phonebook`)\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleNameFilterChange = (event) => {\n    setNameFilter(event.target.value)\n  }\n\n  const handleDeletePerson = (id) => {\n    const tbd = persons.find(person => person.id === id).name\n    if(window.confirm(`Are you sure you want to delete ${tbd} ?`)){\n      personService.deletePerson(id)\n\n      setNotifMessage(\n        `${tbd} was deleted`\n      )\n      setTimeout(() => {\n        setNotifMessage(null)\n      }, 5000)\n      setPersons(persons.filter(person => person.id !== id))\n    }\n  }\n\n  const personsToShow = persons.filter(person => person.name.toLowerCase().startsWith(nameFilter.toLowerCase()))\n\n\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notifMessage} />\n      <Filter nameFilter={nameFilter} handleNameFilterChange={handleNameFilterChange}/>\n      <h3>Add a new</h3>\n      <PersonForm addName={addName} newName={newName} newNumber={newNumber} handleNameChange={handleNameChange} handleNumberChange={handleNumberChange}/>\n      <Persons personsToShow = {personsToShow} handleDeletePerson= {handleDeletePerson} />\n    </div>\n  )\n\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}